{
	"openapi": "3.0.0",
	"info": {
		"description": "Data Modernizaton: Schema Mapping and Testing.  (Note: use api key `special-key` to test the authorization filters with OpenAPI)",
		"version": "1.0.0",
		"title": "MSS International",
		"termsOfService": "http://swagger.io/terms/",
		"contact": {
			"email": "apiteam@swagger.io"
		},
		"license": {
			"name": "Apache 2.0",
			"url": "http://www.apache.org/licenses/LICENSE-2.0.html"
		},
		"x-pods": {
			"pod1": {
				"name": "pod1",
				"metrics": {
					"CPU": "",
					"RAM": ""
				},
				"containers": {
					"c1": {
						"id": "c1",
						"metrics": {
							"load": ""
						},
						"port": 4000
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "https://msskafka.onrender.com/",
			"description": "Test Server on IBM Cloud"
		}
	],
	"tags": [
		{
			"name": "product",
			"description": "Streaming analytics on product performance",
			"externalDocs": {
				"description": "Find out more",
				"url": "https://msssite.vercel.app/"
			}
		},
		{
			"name": "customer",
			"description": "Real-time insights to customer orders and profiles",
			"externalDocs": {
				"description": "Schema specs",
				"url": "https://json-schema.org/"
			}
		},
		{
			"name": "order",
			"description": "Time series analysis on orders",
			"externalDocs": {
				"description": "MSS Industry Patterns",
				"url": "https://mssdocs.vercel.app"
			}
		}
	],
	"paths": {
		"/product": {
			"put": {
				"tags": ["product"],
				"summary": "update product streams with real-time info",
				"description": "Enrichment capability for product streams",
				"requestBody": {
					"description": "Configuration parameters",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Product"
							}
						}
					}
				},
				"responses": {
					"405": {
						"description": "Invalid input"
					}
				},
				"security": [
					{
						"petstore_auth": ["write:products", "read:products"]
					}
				],
				"x-location": {
					"$ref": "#/info/x-pods/pod1/containers/c1/port"
				},
				"x-metrics": {
					"load": ""
				}
			},
			"get": {
				"tags": ["product"],
				"summary": "fetch product transactions for a given date range",
				"description": "",
				"responses": {
					"405": {
						"description": "Invalid input"
					}
				},
				"security": [
					{
						"petstore_auth": ["write:products", "read:products"]
					}
				],
				"x-location": {
					"$ref": "#/info/x-pods/pod1/containers/c1/port"
				},
				"x-metrics": {
					"load": ""
				}
			}
		},
		"/customer": {
			"patch": {
				"tags": ["customer"],
				"summary": "Update selected customer records",
				"description": "",
				"requestBody": {
					"description": "Configuration requirements",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Customer"
							}
						}
					}
				},
				"responses": {
					"405": {
						"description": "Invalid input"
					}
				},
				"security": [
					{
						"petstore_auth": ["write:customers", "read:customers"]
					}
				],
				"x-location": {
					"$ref": "#/info/x-pods/pod1/containers/c1/port"
				},
				"x-metrics": {
					"load": ""
				}
			},
			"get": {
				"tags": ["customer"],
				"summary": "Fetch customer data from real-time streams based on date range",
				"description": "",
				"responses": {
					"405": {
						"description": "Invalid input"
					}
				},
				"security": [
					{
						"petstore_auth": ["write:customers", "read:customers"]
					}
				],
				"x-location": {
					"$ref": "#/info/x-pods/pod1/containers/c1/port"
				},
				"x-metrics": {
					"load": ""
				}
			}
		},
		"/order": {
			"put": {
				"tags": ["order"],
				"summary": "Add new order enrichment datasets",
				"description": "",
				"requestBody": {
					"description": "description about configurations",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Order"
							}
						}
					}
				},
				"responses": {
					"405": {
						"description": "Invalid input"
					}
				},
				"security": [
					{
						"petstore_auth": ["write:orders", "read:porders"]
					}
				],
				"x-location": {
					"$ref": "#/info/x-pods/pod1/containers/c1/port"
				},
				"x-metrics": {
					"load": ""
				}
			},
			"patch": {
				"tags": ["order"],
				"summary": "Update streams with latest versions of enrichment datasets",
				"description": "",
				"requestBody": {
					"description": "description configurations",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Orders"
							}
						}
					}
				},
				"responses": {
					"405": {
						"description": "Invalid input"
					}
				},
				"security": [
					{
						"petstore_auth": ["write:orders", "read:orders"]
					}
				],
				"x-location": {
					"$ref": "#/info/x-pods/pod1/containers/c1/port"
				},
				"x-metrics": {
					"load": ""
				}
			},
			"get": {
				"tags": ["order"],
				"summary": "Insert new test data for orders into Kafka streams",
				"description": "",
				"responses": {
					"405": {
						"description": "Invalid input"
					}
				},
				"security": [
					{
						"petstore_auth": ["write:orders", "read:orders"]
					}
				],
				"x-location": {
					"$ref": "#/info/x-pods/pod1/containers/c1/port"
				},
				"x-metrics": {
					"load": ""
				}
			}
		}
	},
	"components": {
		"securitySchemes": {
			"kafka_auth": {
				"type": "oauth2",
				"flows": {
					"authorizationCode": {
						"authorizationUrl": "/oauth/dialog",
						"tokenUrl": "/oauth/token",
						"scopes": {
							"write:products": "modify product configs",
							"read:products": "read product configs"
						}
					}
				}
			},
			"api_key": {
				"type": "apiKey",
				"name": "api_key",
				"in": "header"
			}
		},
		"schemas": {
			"Order": {
				"$schema": "https://json-schema.org/draft/2020-12/schema",
				"$id": "https://example.com/orders.schema.json",
				"title": "Order",
				"description": "Sales orders from Acme's catalog",
				"type": "object",
				"properties": {
				  "orderId": {
					"description": "The unique identifier for the order",
					"type": "integer"
				  },
				  "customerId": {
					"description": "Unique identifier of the customer",
					"type": "string"
				  },
				  "order": {
					"description": "Order placed by the customer",
					"type": "array",
					"items": {
					  "type": "object",
					  "properties": {
						"productId": {
						  "type": "string"
						},
						"description": {
						  "type": "string"
						},
						"price": {
						  "type": "integer"
						},
						"units": {
						  "type": "integer"
						}
					  },
					  "minItems": 1,
					  "uniqueItems": true
					}
				  }
				}
			  },
			"Category": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int64"
					},
					"name": {
						"type": "string"
					}
				},
				"xml": {
					"name": "Category"
				}
			},
			"Customer": {
				
			},
			"Tag": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int64"
					},
					"name": {
						"type": "string"
					}
				},
				"xml": {
					"name": "Tag"
				}
			},
			"Product": {
				"$schema": "https://json-schema.org/draft/2020-12/schema",
				"$id": "https://example.com/product.schema.json",
				"title": "Product",        
				"description": "A product from Acme's catalog",
				"type": "object",
				"properties": {
				"productId": {
					"description": "The unique identifier for a product",
					"type": "integer"
				},
				"productName": {
					"description": "Name of the product",
					"type": "string"
				},
				"price": {
					"description": "The price of the product",
					"type": "number",
					"exclusiveMinimum": 0
				},
				"tags": {
					"description": "Tags for the product",
					"type": "array",
					"items": {
					"type": "string"
					},
					"minItems": 1,
					"uniqueItems": true
				},
				"dimensions": {
					"type": "object",
					"properties": {
					"length": {
						"type": "number"
					},
					"width": {
						"type": "number"
					},
					"height": {
						"type": "number"
					}
					},
					"required": [ "length", "width", "height" ]
				},
				"warehouseLocation": {
					"description": "Coordinates of the warehouse where the product is located.",
					"$ref": "https://example.com/geographical-location.schema.json"
				}
				},
				"required": [ "productId", "productName", "price" ]
					
					}
		}
	},
	"externalDocs": {
		"description": "Learn more about MSS International",
		"url": "https://mssint.com"
	}
}
